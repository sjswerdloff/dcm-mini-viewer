name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.in-project true
          poetry install
      - name: Check formatting with Black
        run: |
          poetry run black --check src/
      - name: Lint with flake8
        run: |
          poetry run flake8 src/ --max-line-length=127

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: install ubuntu packages
        run: |
          sudo apt-get update
          sudo apt-get install xvfb libxkbcommon-x11-0 herbstluftwm libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0 libopengl0 libglut3.12 libglut-dev freeglut3-dev libgeos-c1v5 libgeos++-dev libgeos-dev libxcb-cursor0
          # install everything related to xcb.  libxcb-cursor0 is required for Qt >=6.5 and it has numerous dependencies
          sudo apt-get install -y libxcb1 libxcb-cursor0 libxcb-glx0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render0 libxcb-render-util0 libxcb-shape0 libxcb-shm0 libxcb-sync1 libxcb-util1 libxcb-xfixes0 libxcb-xinerama0 libxcb-xkb1
          # sudo Xvfb :1 -screen 0 1024x768x24 </dev/null &
          /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1920x1200x24 -ac +extension GLX
          sleep 3
          herbstluftwm &
          sleep 1
          # Check system resources
          free -m
          ulimit -a
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.in-project true
          poetry install
      - name: Test with pytest
        env:
          DISPLAY: ":99"
        run: |
          poetry run pytest --cov=src --cov-report=xml --cov-report=term test/


  build:
    runs-on: ${{ matrix.os }}
    needs: [lint, test]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.in-project true
          poetry install
      - name: Build with PyInstaller
        run: |
          poetry run pyinstaller src/main.py --name dcm-mini-viewer --onefile
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dcm-mini-viewer-${{ matrix.os }}
          path: dist/
