name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.in-project true
          poetry install
      - name: Check formatting with Black
        run: |
          poetry run black --check src/
      - name: Lint with flake8
        run: |
          poetry run flake8 src/ --max-line-length=127
      - name: Lint with pylint
        run: |
          poetry run python -m pylint src/ --max-line-length=127

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.in-project true
          poetry install
      - name: Test with pytest
        run: |
          poetry run pytest --cov=src --cov-report=xml --cov-report=term test/
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  build:
    runs-on: ${{ matrix.os }}
    needs: [lint, test]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.in-project true
          poetry install
      - name: Build with PyInstaller
        run: |
          poetry run pyinstaller src/main.py --name onkodicom-discovery --onefile
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: onkodicom-discovery-${{ matrix.os }}
          path: dist/
